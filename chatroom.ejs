<!-- chatroom.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat Room: <%= chatRoomName %></title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center py-6">
  <div class="bg-white rounded-lg shadow-lg p-6 w-full max-w-4xl">

    <!-- Heading -->
    <h2 class="text-3xl font-semibold text-center text-gray-800 mb-6">Chat Room: <%= chatRoomName %> (ID: <%= chatRoomId %>)</h2>

    <!-- Members List -->
    <div class="mb-4">
      <h3 class="text-lg font-medium text-gray-700">Members:</h3>
      <ul id="membersList" class="list-disc list-inside">
        <% members.forEach(function(member) { %>
          <li><%= member %></li>
        <% }); %>
      </ul>
    </div>

    <!-- Chat Section -->
    <div class="mt-6">
      <div id="messages" class="bg-gray-200 p-4 rounded-lg h-64 overflow-y-auto mb-4"></div>
      <form id="messageForm" class="flex mb-4">
        <input id="messageInput" class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400" placeholder="Type a message">
        <button type="submit" class="ml-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none">Send</button>
      </form>
      <form id="fileForm" class="flex">
        <input type="file" id="fileInput" class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400">
        <button type="submit" class="ml-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none">Share File</button>
      </form>
    </div>

  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const socket = io();
      const messageForm = document.getElementById('messageForm');
      const messageInput = document.getElementById('messageInput');
      const messagesContainer = document.getElementById('messages');
      const fileForm = document.getElementById('fileForm');
      const fileInput = document.getElementById('fileInput');

      // Function to display messages with username and timestamp
      function displayMessage(username, message, timestamp) {
        const messageElement = document.createElement('div');
        messageElement.innerHTML = `
          <div class="flex items-center mb-2">
            <span class="font-bold mr-2">${username}</span>
            <span class="text-gray-500 text-sm">${timestamp}</span>
          </div>
          <p>${message}</p>
        `;
        messagesContainer.appendChild(messageElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      }

      // Listen for incoming chat messages
      socket.on('chat message', function(data) {
        displayMessage(data.username, data.message, data.timestamp);
      });

      // Listen for file shared events
      socket.on('file shared', function(fileInfo) {
        const fileElement = document.createElement('div');
        fileElement.innerHTML = `<a href="${fileInfo.filePath}" download>${fileInfo.fileName}</a>`;
        messagesContainer.appendChild(fileElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      });

      // Handle form submission for sending messages
      messageForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const message = messageInput.value.trim();
        if (message) {
          // Display message immediately on submit
          displayMessage('<%= username %>', message, new Date().toLocaleString());
          // Emit message to server
          socket.emit('chat message', {
            chatRoomId: '<%= chatRoomId %>',
            username: '<%= username %>',
            message: message
          });
          messageInput.value = '';
        }
      });

      // Handle form submission for sharing files
      fileForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const file = fileInput.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function(e) {
            const fileData = e.target.result;
            socket.emit('share file', { fileName: file.name, fileData });
          };
          reader.readAsDataURL(file);
          fileInput.value = '';
        }
      });

    });
  </script>

</body>
</html>
